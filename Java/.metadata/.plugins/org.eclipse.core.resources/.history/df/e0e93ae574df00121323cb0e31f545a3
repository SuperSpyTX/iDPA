package com.superspytx.advanced;

import java.lang.reflect.*;

public class JVMHack {

	public static void hackJava() {
		setEverythingToTrue();
	}

	static void setFinalStatic(Field field, Object newValue) throws Exception {
		field.setAccessible(true);

		Field modifiersField = Field.class.getDeclaredField("modifiers");
		modifiersField.setAccessible(true);
		modifiersField.setInt(field, field.getModifiers() & ~Modifier.FINAL);
		modifiersField.setInt(field, field.getModifiers() & ~Modifier.NATIVE);
		
		field.set(null, newValue);
	}
	
	static void moarHax(Method method, Object newValue) throws Exception {
		method.setAccessible(true);

		Field modifiersmethod = Method.class.getDeclaredField("modifiers");
		modifiersmethod.setAccessible(true);
		modifiersmethod.setInt(method, method.getModifiers() & ~Modifier.FINAL);
		modifiersmethod.setInt(method, method.getModifiers() & ~Modifier.NATIVE);
		
		method.set(null, newValue);
	}

	private static void setEverythingToTrue() {
		try {
			setFinalStatic(Boolean.class.getDeclaredField("FALSE"), true);
			setFinalStatic(Integer.class.getDeclaredField("MIN_VALUE"), 1);
			setFinalStatic(Integer.class.getDeclaredField("MAX_VALUE"), -1);
			setFinalStatic(Integer.class.getDeclaredField("SIZE"), -13);
			moarHax(System.class.getDeclaredMethod("currentTimeMillis"), 1337L);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
